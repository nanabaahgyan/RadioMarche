;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; routes config file. separated for convenience		 ;
; and possible caching when it 'grows' in the future ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[routes]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; application home path                              ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

routes.home.route = /home
routes.home.defaults.module = default
routes.home.defaults.controller = index
routes.home.defaults.action = index

routes.about-us.route = /about-us
routes.about-us.defaults.module = default
routes.about-us.defaults.controller = index
routes.about-us.defaults.action = about-us

routes.maintenance.route = /maintenance
routes.maintenance.defaults.module = default
routes.maintenance.defaults.controller = index
routes.maintenance.defaults.action = maintenance

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; account controller routes definitions              ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

routes.login.route = /account/login
routes.login.defaults.module = account
routes.login.defaults.controller = account
routes.login.defaults.action = login

routes.logout.route = /account/logout
routes.logout.defaults.module = account
routes.logout.defaults.controller = account
routes.logout.defaults.action = logout

routes.register.route = /account/register
routes.register.defaults.module = account
routes.register.defaults.controller = account
routes.register.defaults.action = register

routes.success.route = /account/success
routes.success.defaults.module = account
routes.success.defaults.controller = account
routes.success.defaults.action = success

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ngo controller routes definitions                 ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

routes.ngo.route = /ngo/home
routes.ngo.defaults.module = market
routes.ngo.defaults.controller = ngo
routes.ngo.defaults.action = index

routes.enter-new-offering-info.route = /ngo/enter-new-offering-info
routes.enter-new-offering-info.defaults.module = market
routes.enter-new-offering-info.defaults.controller = ngo
routes.enter-new-offering-info.defaults.action = enter-new-offering-info

routes.create-product-offering.route = /ngo/create-product-offering
routes.create-product-offering.defaults.module = market
routes.create-product-offering.defaults.controller = ngo
routes.create-product-offering.defaults.action = create-product-offering  

routes.create-new-communique.route = /ngo/create-new-communique
routes.create-new-communique.defaults.module = market
routes.create-new-communique.defaults.controller = ngo
routes.create-new-communique.defaults.action = create-new-communique

routes.preview-communique.route = /ngo/preview-communique
routes.preview-communique.defaults.module = market
routes.preview-communique.defaults.controller = ngo
routes.preview-communique.defaults.action = preview-communique

;this deletes a created communique
routes.delete-communique.route = /ngo/delete-communique
routes.delete-communique.defaults.module = market
routes.delete-communique.defaults.controller = ngo
routes.delete-communique.defaults.action = delete-communique

routes.edit-communique-info.route = /ngo/edit-communique-info
routes.edit-communique-info.defaults.module = market
routes.edit-communique-info.defaults.controller = ngo
routes.edit-communique-info.defaults.action = edit-communique-info

;this deletes an information used to create a communique
routes.delete-communique-info.route = /ngo/delete-communique-info
routes.delete-communique-info.defaults.module = market
routes.delete-communique-info.defaults.controller = ngo
routes.delete-communique-info.defaults.action = delete-communique-info

;route for ajax form validation
routes.validate-form.route = /async/validate-form
routes.validate-form.defaults.module = default
routes.validate-form.defaults.controller = async
routes.validate-form.defaults.action = validate-form

;communique store route including pagination settings
routes.communique-store.route = /ngo/communique-store/:page/*
routes.communique-store.defaults.module = market
routes.communique-store.defaults.controller = ngo
routes.communique-store.defaults.action = communique-store
routes.communique-store.defaults.page = 1
routes.communique-store.reqs.page = \d+

routes.show-communique-content.route = /ngo/show-communique-content
routes.show-communique-content.defaults.module = market
routes.show-communique-content.defaults.controller = ngo
routes.show-communique-content.defaults.action = show-communique-content

routes.ngo-success.route = /ngo/success
routes.ngo-success.defaults.module = market
routes.ngo-success.defaults.controller = ngo
routes.ngo-success.defaults.action = success

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; radio controller routes definitions		     	;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

routes.radio.route = /radio/home
routes.radio.defaults.module = market
routes.radio.defaults.controller = radio
routes.radio.defaults.action = index

routes.read-product-offering.route = /radio/read-product-offering
routes.read-product-offering.defaults.module = market
routes.read-product-offering.defaults.controller = radio
routes.read-product-offering.defaults.action = read-product-offering

routes.radio-success.route = /radio/success
routes.radio-success.defaults.module = market
routes.radio-success.defaults.controller = radio
routes.radio-success.defaults.action = success

routes.download-product-offering.route = /radio/download-product-offering
routes.download-product-offering.defaults.module = market
routes.download-product-offering.defaults.controller = radio
routes.download-product-offering.defaults.action = download-product-offering

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; market controller routes definitions				;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;routes.market.route = /market-info
;routes.market.defaults.module = market
;routes.market.defaults.controller = market-info
;routes.market.defaults.action = index

;routes.create-new.route = /market-info/create-new
;routes.create-new.defaults.module = market
;routes.create-new.defaults.controller = market-info
;routes.create-new.defaults.action = create-new

;route for fulltext index search
routes.search.route = /market-info/search
routes.search.defaults.module = market
routes.search.defaults.controller = market-info
routes.search.defaults.action = search

;route for printing market info
routes.print.route = /market-info/print
routes.print.defaults.module = market
routes.print.defaults.controller = market-info
routes.print.defaults.action = print

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; admin controller routes definitions				;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;admin index page route
routes.admin.route = /admin/home
routes.admin.defaults.module = account
routes.admin.defaults.controller = admin
routes.admin.defaults.action = index

;admin new user registration route
routes.register-new-user.route = /admin/register-new-user
routes.register-new-user.defaults.module = account
routes.register-new-user.defaults.controller = admin
routes.register-new-user.defaults.action = register-new-user

;the route when an already registered user is to be validated
routes.validate-new-user.route = /admin/validate-new-user
routes.validate-new-user.defaults.module = account
routes.validate-new-user.defaults.controller = admin
routes.validate-new-user.defaults.action = validate-new-user

;route for validating new market offering
routes.validate-new-offering.route = /admin/validate-new-offering
routes.validate-new-offering.defaults.module = account
routes.validate-new-offering.defaults.controller = admin
routes.validate-new-offering.defaults.action = validate-new-offering

;route for creating full-text search index for application
routes.admin-fulltext-index-create.route = /admin/market/fulltext-index/create
routes.admin-fulltext-index-create.defaults.module = account
routes.admin-fulltext-index-create.defaults.controller = admin
routes.admin-fulltext-index-create.defaults.action = create-fulltext-index

;route for synchronizing communique on platforms
routes.sync-platforms.route = /admin/sync-com-platform
routes.sync-platforms.defaults.module = account
routes.sync-platforms.defaults.controller = admin
routes.sync-platforms.defaults.action = synchronize-communique-platform

;route to add a newly registered user
routes.admin-add-new-user.route = /admin/add-new-user
routes.admin-add-new-user.defaults.module = account
routes.admin-add-new-user.defaults.controller = admin
routes.admin-add-new-user.defaults.action = add-new-user

;route to remove user
routes.admin-remove-user.route = /admin/remove-user
routes.admin-remove-user.defaults.module = account
routes.admin-remove-user.defaults.controller = admin
routes.admin-remove-user.defaults.action = delete-user

routes.admin-success.route = /admin/success
routes.admin-success.defaults.module = account
routes.admin-success.defaults.controller = admin
routes.admin-success.defaults.action = success

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; REST routes definitions							 ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;routes.rest.route = /rest
;routes.rest.defaults.module = market
;routes.rest.defaults.controller = rest
;routes.rest.defaults.action = index